{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+RAyBeA,MArBf,YAAyD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC3C,OAAO,sBAAKC,UAAU,QAAf,UACH,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,aAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SAA+BD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OAAkB,oBAAgBL,UAAU,gBAA1B,SAA2CI,GAAlCC,QACrE,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,gBCyCGC,G,kNA7CbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAKVC,U,sBAAY,8BAAAC,EAAA,sEAOAC,IAAMC,IAAI,yDAPV,gBAKEJ,EALF,EAIRK,KACEA,KAAQL,OAGZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IARzB,2C,kEAmBVQ,KAAKN,c,+BAEG,IAAD,EACuBM,KAAKT,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OAEnB,OACE,yBAASV,UAAU,YAAnB,SAAgCS,EAAY,qBAAKT,UAAU,SAAf,SAC1C,sBAAMA,UAAU,eAAhB,0BAEA,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAAAe,GAAK,OACnB,cAAC,EAAD,CAAsBC,GAAID,EAAMC,GAAIxB,KAAMuB,EAAMvB,KAAMC,MAAOsB,EAAMtB,MAAOC,QAASqB,EAAMrB,QAASC,OAAQoB,EAAME,mBAAoBrB,OAAQmB,EAAMnB,QAAtImB,EAAMC,e,GAtCRE,IAAMC,YCGxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5b174c66.chunk.js","sourcesContent":["import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ year, title, summary, poster, genres}) {\r\n    return <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title}></img>\r\n        <div className=\"movie_data\">\r\n            <h3 className=\"movie__title\">{title}</h3>\r\n            <h5 className=\"movie__year\">{year}</h5>\r\n            <ul className=\"movie__genres\">{genres.map((genre, index) => <li key={index} className=\"genres__genre\">{genre}</li>)}</ul>\r\n            <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: propTypes.number.isRequired,\r\n    year: propTypes.number.isRequired,\r\n    title: propTypes.string.isRequired,\r\n    summary: propTypes.string.isRequired,\r\n    poster: propTypes.string.isRequired,\r\n    genres: propTypes.arrayOf(propTypes.string).isRequired,\r\n}\r\n\r\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport \"./App.css\";\n\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  /* 비동기 함수 --> axios가 끝날 때 까지 기다림.\n  async 키워드를 통해서 getMovies() 메서드가 조금 시간이 필요하고 기다려야 함을 말함. 비동기 함수를 선언 할 수 있고 await를 선언해서 코드가 접근을  */\n  getMovies = async () => {\n    /* ES6\n        : data.data.movies --> 를 빼서 사용 하려고 할 때 이런 식의 문법 사용해서 간단하게 이용 할 수 있음.   */\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\");\n    this.setState({ movies, isLoading: false });\n    // this.setState({movies: movies}) --> setState의 movies / axios부터의 movies. \n  }\n  /* \n    componentDidMount에서 데이터를 fetch함.\n    # fetch() <-> axios  */\n  componentDidMount() {\n    // setTimeout(() => {\n    //   this.setState({isLoading: false});\n    // }, 6000);\n\n    this.getMovies();\n  }\n  render() {\n    const { isLoading, movies } = this.state;\n\n    return (\n      <section className=\"container\">{isLoading ? <div className=\"loader\">\n        <span className=\"loader__text\">Loading...</span>\n      </div> : (\n        <div className=\"movies\">\n          {movies.map(movie => (\n        <Movie key={movie.id} id={movie.id} year={movie.year} title={movie.title} summary={movie.summary} poster={movie.medium_cover_image} genres={movie.genres} />\n          ))}\n        </div>\n      )}</section>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n/* \r\n    jsx: javascript + html 조합, react 특화 개념\r\n    리액트 어플리케이션은 하나의 컴포넌트만 랜더링 해야함\r\n    -> vue에서 index.html에 main.js에서 app 컴포넌트 하나 넣는 것과 비슷한듯 \r\n*/\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}